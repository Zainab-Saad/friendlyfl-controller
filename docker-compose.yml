version: '3.9'

services:
  friendlyfl-controller:
    build:
      context: .
    image: friendlyfl-controller
    depends_on:
      - controller-scheduler
      - controller-run-worker
      - controller-processor-worker
      - redis
    ports:
      - '8001:8000'
    env_file:
      - .env
    command: bash -c "cron && poetry run python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - artifacts:/friendlyfl-controller/local
    networks:
      - network

  controller-scheduler:
    build:
      context: .
    image: friendlyfl-controller
    depends_on:
      - redis
    env_file:
      - .env
    entrypoint: [ "poetry", "run", "celery", "-A", "friendlyfl", "beat", "-l", "DEBUG" ]
    volumes:
      - artifacts:/friendlyfl-controller/local
    networks:
      - network

  controller-run-worker:
    build:
      context: .
    image: friendlyfl-controller
    depends_on:
      - redis
    env_file:
      - .env
    entrypoint: [ "poetry", "run", "celery", "-A", "friendlyfl", "worker", "-l", "DEBUG", "-Q", "friendlyfl.run" ]
    volumes:
      - artifacts:/friendlyfl-controller/local
    networks:
      - network

  controller-processor-worker:
    build:
      context: .
    image: friendlyfl-controller
    depends_on:
      - redis
    env_file:
      - .env
    entrypoint: [ "poetry", "run", "celery", "-A", "friendlyfl", "worker", "-l", "DEBUG", "--concurrency=1", "-Q", "friendlyfl.processor" ]
    volumes:
      - artifacts:/friendlyfl-controller/local
    networks:
      - network


  redis:
    image: redis:5.0
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/opt/redis/data
    networks:
      - network

volumes:
  artifacts: {}
  redis_data: {}

networks:
  network:
